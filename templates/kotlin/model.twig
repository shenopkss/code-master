package com.honghu.api.model

import com.honghu.api.enum.*
import com.honghu.api.ext.mongo.find
import com.honghu.api.provider.db
import io.vertx.core.json.JsonObject
import io.vertx.kotlin.core.json.json
import io.vertx.kotlin.core.json.obj

class {{table.name}}(
{% for index,column in table.columns %}
{% if column.name not in [table.primaryKey, 'created_at', 'updated_at', 'deleted_at']%}
{% if column.type == 'List' %}
  var {{ column.name }}:List<{{column.subtype}}> = {{column | default_value | raw }}{%if index != table.columns | length - 1 %},{%endif%}

{% elseif column.type == 'Enum' %}
  var {{ column.name }}:{{column.subtype}} = {{column | default_value | raw }}{%if index != table.columns | length - 1 %},{%endif%}

{% else %}
  var {{ column.name }}:{{column.type}} = {{column | default_value | raw }}{%if index != table.columns | length - 1 %},{%endif%}
  
{% endif %}
{% endif %}
{% endfor %}
) : Model() {
{% for ftable in table.refTables%}
  suspend fun get{{ ftable.name}}s(): List<{{ ftable.name}}>? {
    val query = json { obj("{{ table.name | lcamel }}Id" to id) }
    return db.find<{{ ftable.name }}>(query)
  }
{% endfor %}
}