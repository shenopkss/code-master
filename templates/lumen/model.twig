<?php
namespace App\Models;
use DateTimeInterface;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * @property integer {{table.primaryKey}}
{% for column in table.columns %}
{% if column.name not in ['created_at', 'updated_at', 'deleted_at']%}
 * @property {{column|cast}} ${{column.name}}
{% endif %}{% endfor %}
*/
class {{ table.name | camel }} extends Model {

    protected $connection = '{{ env('NAMESPACE') }}';

    protected $casts = [ '{{ table.primaryKey }}' => 'integer',{% for column in table.columns %}{% if column.type != 'String'%} '{{ column.name }}' => '{{ column | cast }}',{%endif%}{% endfor %}];

    protected $primaryKey = '{{ table.primaryKey }}';

    protected $table = '{{table.realname }}';


    protected $fillable = [{% for column in table.columns %}{% if column.name not in ['created_at', 'updated_at', 'deleted_at']%}'{{ column.name }}', {% endif %}{% endfor %}];

	protected $hidden = [];

{% for column in table.foreignKeys %}
    public function {{ column.referenceTable.name }}()
    {
        return $this->belongsTo('App\Models\{{ column.referenceTable.name | camel }}');
    }
{% endfor %}

{% for ftable in table.refTables%}
    public function {{ ftable.name }}s()
    {
        return $this->hasMany('App\Models\{{ ftable.name | camel }}');
    }
{% endfor %}

    protected function serializeDate(DateTimeInterface $date)
    {
        return $date->format('Y-m-d H:i:s');
    }
}
